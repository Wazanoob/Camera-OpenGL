#pragma once
#include "Actor.h"

class TileRacing;

const int TILE_COLS = 20;
const int TILE_ROWS = 20;

const int TRACK_ROAD = 0;
const int TRACK_WALL = 1;
const int TRACK_FOREST = 2;
const int TRACK_PLAYER = 3;
const int TRACK_END = 4;

class GridRacing : public Actor
{
public:
	GridRacing();
	~GridRacing();

	int getTileIndex(int i, int j) { return gridTiles[i][j]; }
	void setTileIndex(int i, int j, int tileType) { gridTiles[i][j] = tileType; }

	Vector2 getStartPosition();
	bool endGame = false;

private:
	int gridTiles[20][20] =
	{
		{2 , 2 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 2 , 2 },
		{2 , 2 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 2 },
		{1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 },
		{1 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , 1 , 1 , 1 , 0 , 0 , 0 , 1 },
		{1 , 0 , 0 , 0 , 1 , 2 , 2 , 2 , 2 , 2 , 1 , 0 , 0 , 0 , 1 , 2 , 1 , 0 , 0 , 1 },
		{1 , 0 , 0 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 1 , 0 , 0 , 0 , 1 , 1 , 0 , 0 , 1 },
		{1 , 0 , 0 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 1 , 0 , 0 , 0 , 1 , 0 , 0 , 1 },
		{1 , 0 , 0 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 1 , 0 , 0 , 0 , 0 , 0 , 1 },
		{1 , 0 , 0 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 1 , 0 , 0 , 0 , 0 , 1 },
		{1 , 0 , 0 , 1 , 2 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , 1 },
		{1 , 0 , 0 , 1 , 1 , 0 , 0 , 1 , 2 , 2 , 2 , 1 , 0 , 0 , 0 , 1 , 1 , 0 , 0 , 1 },
		{1 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 1 , 2 , 1 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 1 },
		{1 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 1 },
		{1 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 1 , 0 , 0 , 1 , 0 , 0 , 1 },
		{1 , 0 , 0 , 1 , 0 , 0 , 1 , 0 , 0 , 0 , 1 , 0 , 0 , 1 , 0 , 0 , 1 , 0 , 0 , 1 },
		{1 , 3 , 3 , 1 , 0 , 0 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 1 , 0 , 0 , 1 },
		{1 , 1 , 1 , 1 , 0 , 0 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 1 },
		{0 , 4 , 0 , 0 , 0 , 0 , 1 , 2 , 1 , 0 , 0 , 0 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 1 },
		{0 , 4 , 0 , 0 , 0 , 0 , 1 , 2 , 2 , 1 , 1 , 1 , 2 , 2 , 1 , 0 , 0 , 0 , 1 , 2 },
		{1 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 1 , 1 , 1 , 2 , 2 }
	};
};

